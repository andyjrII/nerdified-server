// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id           Int                @id @default(autoincrement())
  name         String?
  email        String             @unique
  phoneNumber  String?            @unique
  password     String
  refreshToken String?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  imagePath    String?
  address      String
  courses      CourseEnrollment[]
  review       Review[]
  wishlist     Wishlist[]

  @@map("students")
}

model Course {
  id          Int                @id @default(autoincrement())
  title       String             @unique
  price       Decimal            @default(0) @db.Decimal(10, 2)
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  enrollments CourseEnrollment[]
  details     String?
  review      Review[]
  wishlist    Wishlist[]

  @@map("courses")
}

model CourseEnrollment {
  id              Int              @id @default(autoincrement())
  student         Student          @relation(fields: [studentId], references: [id])
  studentId       Int
  course          Course           @relation(fields: [courseId], references: [id])
  courseId        Int
  dateEnrolled    DateTime         @default(now())
  paidAmount      Decimal          @db.Decimal(10, 2)
  status          ENROLLMENTSTATUS @default(PENDING)
  reference       String
  classDays       CLASSDAY[]
  sessionsPerWeek Int              @default(1) // Assuming minimum of 1 session per week
  preferredTime   TIMEOFDAY        @default(MORNING)
  mode            MODE             @default(ONLINE)

  @@map("courseenrolment")
}

model Review {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  rating    Int
  comment   String
  createdAt DateTime @default(now())

  @@map("reviews")
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  createdAt DateTime @default(now())

  @@unique([studentId, courseId])
  @@map("wishlists")
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  datePosted DateTime
  postUrl    String   @unique
  imagePath  String?

  @@map("blog")
}

model Admin {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  refreshToken String?
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  role         ROLE     @default(SUB)

  @@map("admin")
}

enum ENROLLMENTSTATUS {
  PENDING
  STARTED
  DROPPED
  FINISHED
}

enum CLASSDAY {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum TIMEOFDAY {
  MORNING
  AFTERNOON
  EVENING
}

enum MODE {
  ONLINE
  ONSITE
}

enum ROLE {
  SUPER
  SUB
}
